# Copyright 2013 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on init
    write /sys/class/android_usb/android0/f_rndis/manufacturer Freescale
    write /sys/class/android_usb/android0/f_rndis/vendorID 18D1
    write /sys/class/android_usb/android0/f_rndis/wceis 1

on boot
    write /sys/class/android_usb/android0/iSerial $ro.serialno
    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
    write /sys/class/android_usb/android0/iProduct $ro.product.model

on fs
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
    write /sys/class/android_usb/android0/f_ffs/aliases adb

# USB rndis configuration
on property:sys.usb.config=rndis
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 1949
    write /sys/class/android_usb/android0/idProduct 0250
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/bDeviceClass 224
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=mtp
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 1949
    write /sys/class/android_usb/android0/idProduct 0251
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=ptp
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 1949
    write /sys/class/android_usb/android0/idProduct 0253
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=ptp,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 1949
    write /sys/class/android_usb/android0/idProduct 0254
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}


# State machine to defer mtp connection
# The "sys.usb.mtp_state" can have the following values:
#
#  - "mtp_defer_yes": MTP needs to be deferred until boot completes.
#
#  - "mtp_defer_no": MTP can start right way.
#
#  - "mtp_deferred": MTP has been deferred. MTP needs to start at some point later when boot completes.
#
#  - "mtp_chk_mtp_deferred": Now need to enable MTP.
#
#  - Other states: don't do anything.
#
#
# State transition:
#   1st boot: [mtp_defer_yes] --> [mtp_deferred] --> [mtp_chk_mtp_deferred] --> [mtp_defer_no]
#   2nd boot (or later boots):  [mtp_defer_no]
#
# Notes:
#   - On the 1st boot, "persist.sys.mtp_defer" has default value, which is "yes" so that
#   mtp will be defferred.
#   - After the 1st boot completes, "persist.sys.mtp_defer" is set to "no".
#   Therefore, from 2nd boot (or later), the state will always be "mtp_defer_no"
#   so that mtp will start right way.

on property:sys.usb.config=mtp,adb
    setprop sys.usb.mtp_state mtp_defer_${persist.sys.mtp_defer}

on property:ro.runtime.firstboot=*
    setprop persist.sys.mtp_defer no

on property:sys.usb.mtp_state=mtp_defer_no
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 1949
    write /sys/class/android_usb/android0/idProduct 0252
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.mtp_state=mtp_defer_yes
    setprop sys.usb.mtp_state mtp_deferred
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 1949
    write /sys/class/android_usb/android0/idProduct 0255
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state adb

on property:sys.boot_completed=1
    setprop sys.usb.mtp_state mtp_chk_${sys.usb.mtp_state}

on property:sys.usb.mtp_state=mtp_chk_mtp_deferred
    setprop sys.usb.mtp_state mtp_defer_no